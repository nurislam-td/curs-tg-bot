"""add keyword group and timestamp mixin

Revision ID: 7dafe3f4c5a2
Revises: 8a1eddf37464
Create Date: 2024-05-27 23:24:29.971350

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7dafe3f4c5a2'
down_revision: Union[str, None] = '8a1eddf37464'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('keyword_group',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_keyword_group_created_at'), 'keyword_group', ['created_at'], unique=False)
    op.create_index(op.f('ix_keyword_group_id'), 'keyword_group', ['id'], unique=False)
    op.add_column('keyword_map', sa.Column('group_id', sa.Integer(), nullable=False))
    op.add_column('keyword_map', sa.Column('tg_user_id', sa.String(), nullable=False))
    op.add_column('keyword_map', sa.Column('updated_at', sa.DateTime(), server_default=sa.text("(now() at time zone 'utc')"), nullable=False))
    op.create_index(op.f('ix_keyword_map_created_at'), 'keyword_map', ['created_at'], unique=False)
    op.create_index(op.f('ix_keyword_map_group_id'), 'keyword_map', ['group_id'], unique=False)
    op.create_index(op.f('ix_keyword_map_tg_user_id'), 'keyword_map', ['tg_user_id'], unique=False)
    op.drop_constraint('keyword_map_user_id_fkey', 'keyword_map', type_='foreignkey')
    op.create_foreign_key(None, 'keyword_map', 'tg_user', ['tg_user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'keyword_map', 'keyword_group', ['group_id'], ['id'], ondelete='CASCADE')
    op.drop_column('keyword_map', 'user_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('keyword_map', sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'keyword_map', type_='foreignkey')
    op.drop_constraint(None, 'keyword_map', type_='foreignkey')
    op.create_foreign_key('keyword_map_user_id_fkey', 'keyword_map', 'tg_user', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_keyword_map_tg_user_id'), table_name='keyword_map')
    op.drop_index(op.f('ix_keyword_map_group_id'), table_name='keyword_map')
    op.drop_index(op.f('ix_keyword_map_created_at'), table_name='keyword_map')
    op.drop_column('keyword_map', 'updated_at')
    op.drop_column('keyword_map', 'tg_user_id')
    op.drop_column('keyword_map', 'group_id')
    op.drop_index(op.f('ix_keyword_group_id'), table_name='keyword_group')
    op.drop_index(op.f('ix_keyword_group_created_at'), table_name='keyword_group')
    op.drop_table('keyword_group')
    # ### end Alembic commands ###
